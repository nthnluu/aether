syntax = "proto3";

package hours;

import "metadata.proto";
import "options.proto";
import "google/protobuf/timestamp.proto";

option go_package = "aether/pb";

// Represents a queue.
message Queue {
  option (options.entity) = "queue";

  // Unique identifier.
  string queue_id = 1;

  CreationMetadata creation_metadata = 2;

  // The course the queue belongs to.
  string course = 3;

  // User-configurable queue parameters.
  message QueueOptions {
    // The human-readable title for the queue.
    string title = 1;

    // An optional description.
    string description = 2;

    // The location for the queue.
    // Examples: Sun Lab, CIT 205, Zoom, etc.
    string location = 3;

    // The end time of the queue.
    google.protobuf.Timestamp end_time = 4;
  }

  // Required. Contains user-configurable queue settings.
  QueueOptions queue_options = 4;

  // Tickets that are waiting to be claimed.
  repeated Ticket pending_tickets = 5;

  // Tickets that have been completed.
  repeated Ticket completed_tickets = 6;
}

// Represents a ticket in a queue.
message Ticket {
  option (options.entity) = "ticket";

  // Unique identifier.
  string ticket_id = 1;

  CreationMetadata creation_metadata = 2;

  // The text content of the ticket (i.e. the student's question).
  string content = 3;

  // If set, hides the student's name from other student's in the queue.
  bool is_anonymous = 4;

  enum TicketState {
    // The ticket was created, but has not yet been claimed.
    UNCLAIMED = 0;

    // The ticket is currently claimed by a TA.
    CLAIMED = 1;

    // The ticket has been marked complete.
    COMPLETE = 2;

    // The ticket has been marked missing.
    MISSING = 3;

    // A ticket marked missing has been marked returned.
    RETURNED = 4;
  }

  // The current state of the ticket.
  TicketState ticket_state = 5;
}
